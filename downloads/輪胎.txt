# NX 1872
# Journal created by Admin on Fri Jun 14 15:19:12 2024 台北標準時間

#
import math
import NXOpen
import NXOpen.Annotations
import NXOpen.Assemblies
import NXOpen.Drawings
import NXOpen.Features
import NXOpen.GeometricUtilities
import NXOpen.Preferences
def main() : 

    theSession  = NXOpen.Session.GetSession()
    # ----------------------------------------------
    #   功能表：檔案(F)->新建(N)...
    # ----------------------------------------------
    markId1 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "起點")

    fileNew1 = theSession.Parts.FileNew()

    theSession.SetUndoMarkName(markId1, "新建 對話方塊")

    markId2 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "新建")

    theSession.DeleteUndoMark(markId2, None)

    markId3 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "新建")

    fileNew1.TemplateFileName = "model-plain-1-mm-template.prt"

    fileNew1.UseBlankTemplate = False

    fileNew1.ApplicationName = "ModelTemplate"

    fileNew1.Units = NXOpen.Part.Units.Millimeters

    fileNew1.RelationType = ""

    fileNew1.UsesMasterModel = "No"

    fileNew1.TemplateType = NXOpen.FileNewTemplateType.Item

    fileNew1.TemplatePresentationName = "模型"

    fileNew1.ItemType = ""

    fileNew1.Specialization = ""

    fileNew1.SetCanCreateAltrep(False)

    fileNew1.NewFileName = "F:\\產品設計期末\model1.prt\\model1.prt"

    fileNew1.MasterFileName = ""

    fileNew1.MakeDisplayedPart = True

    fileNew1.DisplayPartOption = NXOpen.DisplayPartOption.AllowAdditional

    # User Function call - UF_PART_ask_part_name

    nXObject1 = fileNew1.Commit()

    workPart = theSession.Parts.Work
    displayPart = theSession.Parts.Display
    theSession.DeleteUndoMark(markId3, None)

    fileNew1.Destroy()

    theSession.ApplicationSwitchImmediate("UG_APP_MODELING")

    # ----------------------------------------------
    #   功能表：插入(S)->草圖(H)...
    # ----------------------------------------------
    markId4 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "起點")

    sketchInPlaceBuilder1 = workPart.Sketches.CreateSketchInPlaceBuilder2(NXOpen.Sketch.Null)

    origin1 = NXOpen.Point3d(0.0, 0.0, 0.0)
    normal1 = NXOpen.Vector3d(0.0, 0.0, 1.0)
    plane1 = workPart.Planes.CreatePlane(origin1, normal1, NXOpen.SmartObject.UpdateOption.WithinModeling)

    sketchInPlaceBuilder1.PlaneReference = plane1

    unit1 = workPart.UnitCollection.FindObject("MilliMeter")
    expression1 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)

    expression2 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)

    sketchAlongPathBuilder1 = workPart.Sketches.CreateSketchAlongPathBuilder(NXOpen.Sketch.Null)

    sketchAlongPathBuilder1.PlaneLocation.Expression.SetFormula("0")

    theSession.SetUndoMarkName(markId4, "建立草圖 對話方塊")

    datumAxis1 = workPart.Datums.FindObject("DATUM_CSYS(0) X axis")
    direction1 = workPart.Directions.CreateDirection(datumAxis1, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)

    datumPlane1 = workPart.Datums.FindObject("DATUM_CSYS(0) XZ plane")
    datumCsys1 = workPart.Features.FindObject("DATUM_CSYS(0)")
    point1 = datumCsys1.FindObject("POINT 1")
    xform1 = workPart.Xforms.CreateXformByPlaneXDirPoint(datumPlane1, direction1, point1, NXOpen.SmartObject.UpdateOption.WithinModeling, 0.625, False, True)

    cartesianCoordinateSystem1 = workPart.CoordinateSystems.CreateCoordinateSystem(xform1, NXOpen.SmartObject.UpdateOption.WithinModeling)

    sketchInPlaceBuilder1.Csystem = cartesianCoordinateSystem1

    origin2 = NXOpen.Point3d(0.0, 0.0, 0.0)
    normal2 = NXOpen.Vector3d(0.0, 0.0, 1.0)
    plane2 = workPart.Planes.CreatePlane(origin2, normal2, NXOpen.SmartObject.UpdateOption.WithinModeling)

    plane2.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)

    geom1 = [NXOpen.NXObject.Null] * 1 
    geom1[0] = datumPlane1
    plane2.SetGeometry(geom1)

    plane2.SetFlip(True)

    plane2.SetExpression(None)

    plane2.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)

    plane2.Evaluate()

    origin3 = NXOpen.Point3d(0.0, 0.0, 0.0)
    normal3 = NXOpen.Vector3d(0.0, 0.0, 1.0)
    plane3 = workPart.Planes.CreatePlane(origin3, normal3, NXOpen.SmartObject.UpdateOption.WithinModeling)

    expression3 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)

    expression4 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)

    plane3.SynchronizeToPlane(plane2)

    plane3.SetMethod(NXOpen.PlaneTypes.MethodType.Coincident)

    geom2 = [NXOpen.NXObject.Null] * 1 
    geom2[0] = datumPlane1
    plane3.SetGeometry(geom2)

    plane3.SetAlternate(NXOpen.PlaneTypes.AlternateType.One)

    plane3.Evaluate()

    markId5 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "建立草圖")

    theSession.DeleteUndoMark(markId5, None)

    markId6 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "建立草圖")

    theSession.Preferences.Sketch.CreateInferredConstraints = True

    theSession.Preferences.Sketch.ContinuousAutoDimensioning = True

    theSession.Preferences.Sketch.DimensionLabel = NXOpen.Preferences.SketchPreferences.DimensionLabelType.Expression

    theSession.Preferences.Sketch.TextSizeFixed = True

    theSession.Preferences.Sketch.FixedTextSize = 3.0

    theSession.Preferences.Sketch.DisplayParenthesesOnReferenceDimensions = True

    theSession.Preferences.Sketch.DisplayReferenceGeometry = False

    theSession.Preferences.Sketch.ConstraintSymbolSize = 3.0

    theSession.Preferences.Sketch.DisplayObjectColor = False

    theSession.Preferences.Sketch.DisplayObjectName = True

    nXObject2 = sketchInPlaceBuilder1.Commit()

    sketch1 = nXObject2
    feature1 = sketch1.Feature

    markId7 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "update")

    nErrs1 = theSession.UpdateManager.DoUpdate(markId7)

    sketch1.Activate(NXOpen.Sketch.ViewReorient.TrueValue)

    theSession.DeleteUndoMark(markId6, None)

    theSession.SetUndoMarkName(markId4, "建立草圖")

    sketchInPlaceBuilder1.Destroy()

    sketchAlongPathBuilder1.Destroy()

    try:
        # 運算式仍然在使用中。
        workPart.Expressions.Delete(expression2)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)

    try:
        # 運算式仍然在使用中。
        workPart.Expressions.Delete(expression1)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)

    plane1.DestroyPlane()

    try:
        # 運算式仍然在使用中。
        workPart.Expressions.Delete(expression4)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)

    try:
        # 運算式仍然在使用中。
        workPart.Expressions.Delete(expression3)
    except NXOpen.NXException as ex:
        ex.AssertErrorCode(1050029)

    plane3.DestroyPlane()

    # ----------------------------------------------
    #   功能表：插入(S)->草圖曲線(S)->圓(C)...
    # ----------------------------------------------
    markId8 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Profile short list")

    markId9 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")

    theSession.SetUndoMarkVisibility(markId9, "Curve", NXOpen.Session.MarkVisibility.Visible)

    nXMatrix1 = theSession.ActiveSketch.Orientation

    center1 = NXOpen.Point3d(0.0, 0.0, 0.0)
    arc1 = workPart.Curves.CreateArc(center1, nXMatrix1, 28.692773528507114, 0.0, ( 360.0 * math.pi/180.0 ))

    theSession.ActiveSketch.AddGeometry(arc1, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)

    geom1_1 = NXOpen.Sketch.ConstraintGeometry()

    geom1_1.Geometry = arc1
    geom1_1.PointType = NXOpen.Sketch.ConstraintPointType.ArcCenter
    geom1_1.SplineDefiningPointIndex = 0
    geom2_1 = NXOpen.Sketch.ConstraintGeometry()

    datumCsys2 = workPart.Features.FindObject("SKETCH(1:1B)")
    point2 = datumCsys2.FindObject("POINT 1")
    geom2_1.Geometry = point2
    geom2_1.PointType = NXOpen.Sketch.ConstraintPointType.NotSet
    geom2_1.SplineDefiningPointIndex = 0
    sketchGeometricConstraint1 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_1, geom2_1)

    dimObject1_1 = NXOpen.Sketch.DimensionGeometry()

    dimObject1_1.Geometry = arc1
    dimObject1_1.AssocType = NXOpen.Sketch.AssocType.NotSet
    dimObject1_1.AssocValue = 0
    dimObject1_1.HelpPoint.X = 0.0
    dimObject1_1.HelpPoint.Y = 0.0
    dimObject1_1.HelpPoint.Z = 0.0
    dimObject1_1.View = NXOpen.NXObject.Null
    dimOrigin1 = NXOpen.Point3d(0.0, 0.0, 3.3447432068735701)
    sketchDimensionalConstraint1 = theSession.ActiveSketch.CreateDiameterDimension(dimObject1_1, dimOrigin1, NXOpen.Expression.Null, NXOpen.Sketch.DimensionOption.CreateAsAutomatic)

    dimension1 = sketchDimensionalConstraint1.AssociatedDimension

    expression5 = sketchDimensionalConstraint1.AssociatedExpression

    theSession.ActiveSketch.Update()

    # ----------------------------------------------
    #   對話開始 圓
    # ----------------------------------------------
    markId10 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Curve")

    theSession.SetUndoMarkVisibility(markId10, "Curve", NXOpen.Session.MarkVisibility.Visible)

    nXMatrix2 = theSession.ActiveSketch.Orientation

    center2 = NXOpen.Point3d(0.0, 0.0, 0.0)
    arc2 = workPart.Curves.CreateArc(center2, nXMatrix2, 12.601883013211628, 0.0, ( 360.0 * math.pi/180.0 ))

    theSession.ActiveSketch.AddGeometry(arc2, NXOpen.Sketch.InferConstraintsOption.InferNoConstraints)

    geom1_2 = NXOpen.Sketch.ConstraintGeometry()

    geom1_2.Geometry = arc2
    geom1_2.PointType = NXOpen.Sketch.ConstraintPointType.ArcCenter
    geom1_2.SplineDefiningPointIndex = 0
    geom2_2 = NXOpen.Sketch.ConstraintGeometry()

    geom2_2.Geometry = arc1
    geom2_2.PointType = NXOpen.Sketch.ConstraintPointType.ArcCenter
    geom2_2.SplineDefiningPointIndex = 0
    sketchGeometricConstraint2 = theSession.ActiveSketch.CreateCoincidentConstraint(geom1_2, geom2_2)

    dimObject1_2 = NXOpen.Sketch.DimensionGeometry()

    dimObject1_2.Geometry = arc2
    dimObject1_2.AssocType = NXOpen.Sketch.AssocType.NotSet
    dimObject1_2.AssocValue = 0
    dimObject1_2.HelpPoint.X = 0.0
    dimObject1_2.HelpPoint.Y = 0.0
    dimObject1_2.HelpPoint.Z = 0.0
    dimObject1_2.View = NXOpen.NXObject.Null
    dimOrigin2 = NXOpen.Point3d(0.0, 0.0, 3.3447432068735701)
    sketchDimensionalConstraint2 = theSession.ActiveSketch.CreateDiameterDimension(dimObject1_2, dimOrigin2, NXOpen.Expression.Null, NXOpen.Sketch.DimensionOption.CreateAsAutomatic)

    dimension2 = sketchDimensionalConstraint2.AssociatedDimension

    expression6 = sketchDimensionalConstraint2.AssociatedExpression

    theSession.ActiveSketch.Update()

    # ----------------------------------------------
    #   對話開始 圓
    # ----------------------------------------------
    # ----------------------------------------------
    #   功能表：插入(S)->草圖約束(K)->尺寸(D)->快速(P)...
    # ----------------------------------------------
    markId11 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "起點")

    sketchRapidDimensionBuilder1 = workPart.Sketches.CreateRapidDimensionBuilder()

    lines1 = []
    sketchRapidDimensionBuilder1.AppendedText.SetBefore(lines1)

    lines2 = []
    sketchRapidDimensionBuilder1.AppendedText.SetAfter(lines2)

    lines3 = []
    sketchRapidDimensionBuilder1.AppendedText.SetAbove(lines3)

    lines4 = []
    sketchRapidDimensionBuilder1.AppendedText.SetBelow(lines4)

    sketchRapidDimensionBuilder1.Origin.SetInferRelativeToGeometry(True)

    sketchRapidDimensionBuilder1.Origin.Anchor = NXOpen.Annotations.OriginBuilder.AlignmentPosition.MidCenter

    sketchRapidDimensionBuilder1.Driving.DrivingMethod = NXOpen.Annotations.DrivingValueBuilder.DrivingValueMethod.Driving

    lines5 = []
    sketchRapidDimensionBuilder1.AppendedText.SetBefore(lines5)

    lines6 = []
    sketchRapidDimensionBuilder1.AppendedText.SetAfter(lines6)

    lines7 = []
    sketchRapidDimensionBuilder1.AppendedText.SetAbove(lines7)

    lines8 = []
    sketchRapidDimensionBuilder1.AppendedText.SetBelow(lines8)

    theSession.SetUndoMarkName(markId11, "快速尺寸 對話方塊")

    sketchRapidDimensionBuilder1.Origin.Plane.PlaneMethod = NXOpen.Annotations.PlaneBuilder.PlaneMethodType.XyPlane

    sketchRapidDimensionBuilder1.Origin.SetInferRelativeToGeometry(True)

    dimensionlinearunits1 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits2 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits3 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits4 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits5 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits6 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits7 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits8 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits9 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits10 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    sketchRapidDimensionBuilder1.Origin.SetInferRelativeToGeometry(True)

    sketchRapidDimensionBuilder1.Origin.SetInferRelativeToGeometry(True)

    sketchRapidDimensionBuilder1.Measurement.Direction = NXOpen.Direction.Null

    sketchRapidDimensionBuilder1.Measurement.DirectionView = NXOpen.View.Null

    sketchRapidDimensionBuilder1.Style.DimensionStyle.NarrowDisplayType = NXOpen.Annotations.NarrowDisplayOption.NotSet

    dimensionlinearunits11 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits12 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits13 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits14 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits15 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits16 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits17 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits18 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits19 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits20 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    point1_1 = NXOpen.Point3d(0.0, 0.0, 0.0)
    point2_1 = NXOpen.Point3d(0.0, 0.0, 0.0)
    sketchRapidDimensionBuilder1.FirstAssociativity.SetValue(NXOpen.InferSnapType.SnapType.Center, arc2, workPart.ModelingViews.WorkView, point1_1, NXOpen.TaggedObject.Null, NXOpen.View.Null, point2_1)

    point1_2 = NXOpen.Point3d(0.0, 0.0, 0.0)
    point2_2 = NXOpen.Point3d(0.0, 0.0, 0.0)
    sketchRapidDimensionBuilder1.FirstAssociativity.SetValue(NXOpen.InferSnapType.SnapType.NotSet, arc2, workPart.ModelingViews.WorkView, point1_2, NXOpen.TaggedObject.Null, NXOpen.View.Null, point2_2)

    point1_3 = NXOpen.Point3d(0.0, 0.0, 0.0)
    point2_3 = NXOpen.Point3d(0.0, 0.0, 0.0)
    sketchRapidDimensionBuilder1.SecondAssociativity.SetValue(NXOpen.InferSnapType.SnapType.NotSet, NXOpen.TaggedObject.Null, workPart.ModelingViews.WorkView, point1_3, NXOpen.TaggedObject.Null, NXOpen.View.Null, point2_3)

    dimensionlinearunits21 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits22 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits23 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits24 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits25 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits26 = sketchRapidDimensionBuilder1.Style.UnitsStyle.DimensionLinearUnits

    sketchRapidDimensionBuilder1.Origin.SetInferRelativeToGeometryFromLeader(True)

    assocOrigin1 = NXOpen.Annotations.Annotation.AssociativeOriginData()

    assocOrigin1.OriginType = NXOpen.Annotations.AssociativeOriginType.RelativeToGeometry
    assocOrigin1.View = NXOpen.View.Null
    assocOrigin1.ViewOfGeometry = workPart.ModelingViews.WorkView
    point3 = workPart.Points.FindObject("ENTITY 2 2")
    assocOrigin1.PointOnGeometry = point3
    assocOrigin1.VertAnnotation = NXOpen.Annotations.Annotation.Null
    assocOrigin1.VertAlignmentPosition = NXOpen.Annotations.AlignmentPosition.TopLeft
    assocOrigin1.HorizAnnotation = NXOpen.Annotations.Annotation.Null
    assocOrigin1.HorizAlignmentPosition = NXOpen.Annotations.AlignmentPosition.TopLeft
    assocOrigin1.AlignedAnnotation = NXOpen.Annotations.Annotation.Null
    assocOrigin1.DimensionLine = 0
    assocOrigin1.AssociatedView = NXOpen.View.Null
    assocOrigin1.AssociatedPoint = NXOpen.Point.Null
    assocOrigin1.OffsetAnnotation = NXOpen.Annotations.Annotation.Null
    assocOrigin1.OffsetAlignmentPosition = NXOpen.Annotations.AlignmentPosition.TopLeft
    assocOrigin1.XOffsetFactor = 0.0
    assocOrigin1.YOffsetFactor = 0.0
    assocOrigin1.StackAlignmentPosition = NXOpen.Annotations.StackAlignmentPosition.Above
    sketchRapidDimensionBuilder1.Origin.SetAssociativeOrigin(assocOrigin1)

    point4 = NXOpen.Point3d(61.947431477304235, 0.0, 12.09449852652131)
    sketchRapidDimensionBuilder1.Origin.Origin.SetValue(NXOpen.TaggedObject.Null, NXOpen.View.Null, point4)

    sketchRapidDimensionBuilder1.Origin.SetInferRelativeToGeometry(True)

    sketchRapidDimensionBuilder1.Style.LineArrowStyle.LeaderOrientation = NXOpen.Annotations.LeaderSide.Left

    sketchRapidDimensionBuilder1.Style.DimensionStyle.TextCentered = False

    markId12 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "快速尺寸")

    nXObject3 = sketchRapidDimensionBuilder1.Commit()

    theSession.DeleteUndoMark(markId12, None)

    theSession.SetUndoMarkName(markId11, "快速尺寸")

    theSession.SetUndoMarkVisibility(markId11, None, NXOpen.Session.MarkVisibility.Visible)

    sketchRapidDimensionBuilder1.Destroy()

    markId13 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Start")

    sketchRapidDimensionBuilder2 = workPart.Sketches.CreateRapidDimensionBuilder()

    lines9 = []
    sketchRapidDimensionBuilder2.AppendedText.SetBefore(lines9)

    lines10 = []
    sketchRapidDimensionBuilder2.AppendedText.SetAfter(lines10)

    lines11 = []
    sketchRapidDimensionBuilder2.AppendedText.SetAbove(lines11)

    lines12 = []
    sketchRapidDimensionBuilder2.AppendedText.SetBelow(lines12)

    sketchRapidDimensionBuilder2.Origin.SetInferRelativeToGeometry(True)

    sketchRapidDimensionBuilder2.Origin.Anchor = NXOpen.Annotations.OriginBuilder.AlignmentPosition.MidCenter

    sketchRapidDimensionBuilder2.Style.DimensionStyle.LimitFitDeviation = "H"

    sketchRapidDimensionBuilder2.Style.DimensionStyle.LimitFitShaftDeviation = "g"

    sketchRapidDimensionBuilder2.Driving.DrivingMethod = NXOpen.Annotations.DrivingValueBuilder.DrivingValueMethod.Driving

    theSession.SetUndoMarkName(markId13, "快速尺寸 對話方塊")

    sketchRapidDimensionBuilder2.Origin.Plane.PlaneMethod = NXOpen.Annotations.PlaneBuilder.PlaneMethodType.XyPlane

    sketchRapidDimensionBuilder2.Origin.SetInferRelativeToGeometry(True)

    dimensionlinearunits27 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits28 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits29 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits30 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits31 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits32 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits33 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits34 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits35 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits36 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    sketchRapidDimensionBuilder2.Origin.SetInferRelativeToGeometry(True)

    sketchRapidDimensionBuilder2.Origin.SetInferRelativeToGeometry(True)

    sketchRapidDimensionBuilder2.Measurement.Direction = NXOpen.Direction.Null

    sketchRapidDimensionBuilder2.Measurement.DirectionView = NXOpen.View.Null

    sketchRapidDimensionBuilder2.Style.DimensionStyle.NarrowDisplayType = NXOpen.Annotations.NarrowDisplayOption.NotSet

    dimensionlinearunits37 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits38 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits39 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits40 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits41 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits42 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits43 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits44 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits45 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits46 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    expression7 = workPart.Expressions.FindObject("p0")
    expression7.SetFormula("15")

    theSession.SetUndoMarkVisibility(markId13, None, NXOpen.Session.MarkVisibility.Visible)

    markId14 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "快速尺寸")

    theSession.ActiveSketch.Scale(0.59514915287961967)

    theSession.ActiveSketch.LocalUpdate()

    theSession.DeleteUndoMark(markId14, None)

    markId15 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "快速尺寸")

    theSession.SetUndoMarkName(markId13, "Edit Driving Value")

    point1_4 = NXOpen.Point3d(0.0, 0.0, 0.0)
    point2_4 = NXOpen.Point3d(0.0, 0.0, 0.0)
    sketchRapidDimensionBuilder2.FirstAssociativity.SetValue(NXOpen.InferSnapType.SnapType.Center, arc1, workPart.ModelingViews.WorkView, point1_4, NXOpen.TaggedObject.Null, NXOpen.View.Null, point2_4)

    point1_5 = NXOpen.Point3d(0.0, 0.0, 0.0)
    point2_5 = NXOpen.Point3d(0.0, 0.0, 0.0)
    sketchRapidDimensionBuilder2.FirstAssociativity.SetValue(NXOpen.InferSnapType.SnapType.NotSet, arc1, workPart.ModelingViews.WorkView, point1_5, NXOpen.TaggedObject.Null, NXOpen.View.Null, point2_5)

    point1_6 = NXOpen.Point3d(0.0, 0.0, 0.0)
    point2_6 = NXOpen.Point3d(0.0, 0.0, 0.0)
    sketchRapidDimensionBuilder2.SecondAssociativity.SetValue(NXOpen.InferSnapType.SnapType.NotSet, NXOpen.TaggedObject.Null, workPart.ModelingViews.WorkView, point1_6, NXOpen.TaggedObject.Null, NXOpen.View.Null, point2_6)

    dimensionlinearunits47 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits48 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits49 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits50 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits51 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits52 = sketchRapidDimensionBuilder2.Style.UnitsStyle.DimensionLinearUnits

    sketchRapidDimensionBuilder2.Origin.SetInferRelativeToGeometryFromLeader(True)

    assocOrigin2 = NXOpen.Annotations.Annotation.AssociativeOriginData()

    assocOrigin2.OriginType = NXOpen.Annotations.AssociativeOriginType.RelativeToGeometry
    assocOrigin2.View = NXOpen.View.Null
    assocOrigin2.ViewOfGeometry = workPart.ModelingViews.WorkView
    point5 = workPart.Points.FindObject("ENTITY 2 2")
    assocOrigin2.PointOnGeometry = point5
    assocOrigin2.VertAnnotation = NXOpen.Annotations.Annotation.Null
    assocOrigin2.VertAlignmentPosition = NXOpen.Annotations.AlignmentPosition.TopLeft
    assocOrigin2.HorizAnnotation = NXOpen.Annotations.Annotation.Null
    assocOrigin2.HorizAlignmentPosition = NXOpen.Annotations.AlignmentPosition.TopLeft
    assocOrigin2.AlignedAnnotation = NXOpen.Annotations.Annotation.Null
    assocOrigin2.DimensionLine = 0
    assocOrigin2.AssociatedView = NXOpen.View.Null
    assocOrigin2.AssociatedPoint = NXOpen.Point.Null
    assocOrigin2.OffsetAnnotation = NXOpen.Annotations.Annotation.Null
    assocOrigin2.OffsetAlignmentPosition = NXOpen.Annotations.AlignmentPosition.TopLeft
    assocOrigin2.XOffsetFactor = 0.0
    assocOrigin2.YOffsetFactor = 0.0
    assocOrigin2.StackAlignmentPosition = NXOpen.Annotations.StackAlignmentPosition.Above
    sketchRapidDimensionBuilder2.Origin.SetAssociativeOrigin(assocOrigin2)

    point6 = NXOpen.Point3d(76.106844386402344, 0.0, -22.714058208344884)
    sketchRapidDimensionBuilder2.Origin.Origin.SetValue(NXOpen.TaggedObject.Null, NXOpen.View.Null, point6)

    sketchRapidDimensionBuilder2.Origin.SetInferRelativeToGeometry(True)

    sketchRapidDimensionBuilder2.Style.LineArrowStyle.LeaderOrientation = NXOpen.Annotations.LeaderSide.Left

    sketchRapidDimensionBuilder2.Style.DimensionStyle.TextCentered = False

    markId16 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "快速尺寸")

    nXObject4 = sketchRapidDimensionBuilder2.Commit()

    theSession.DeleteUndoMark(markId16, None)

    theSession.SetUndoMarkName(markId15, "快速尺寸")

    theSession.SetUndoMarkVisibility(markId15, None, NXOpen.Session.MarkVisibility.Visible)

    sketchRapidDimensionBuilder2.Destroy()

    markId17 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Start")

    sketchRapidDimensionBuilder3 = workPart.Sketches.CreateRapidDimensionBuilder()

    lines13 = []
    sketchRapidDimensionBuilder3.AppendedText.SetBefore(lines13)

    lines14 = []
    sketchRapidDimensionBuilder3.AppendedText.SetAfter(lines14)

    lines15 = []
    sketchRapidDimensionBuilder3.AppendedText.SetAbove(lines15)

    lines16 = []
    sketchRapidDimensionBuilder3.AppendedText.SetBelow(lines16)

    sketchRapidDimensionBuilder3.Origin.SetInferRelativeToGeometry(True)

    sketchRapidDimensionBuilder3.Origin.Anchor = NXOpen.Annotations.OriginBuilder.AlignmentPosition.MidCenter

    sketchRapidDimensionBuilder3.Style.DimensionStyle.LimitFitDeviation = "H"

    sketchRapidDimensionBuilder3.Style.DimensionStyle.LimitFitShaftDeviation = "g"

    sketchRapidDimensionBuilder3.Driving.DrivingMethod = NXOpen.Annotations.DrivingValueBuilder.DrivingValueMethod.Driving

    theSession.SetUndoMarkName(markId17, "快速尺寸 對話方塊")

    sketchRapidDimensionBuilder3.Origin.Plane.PlaneMethod = NXOpen.Annotations.PlaneBuilder.PlaneMethodType.XyPlane

    sketchRapidDimensionBuilder3.Origin.SetInferRelativeToGeometry(True)

    dimensionlinearunits53 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits54 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits55 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits56 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits57 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits58 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits59 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits60 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits61 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits62 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    sketchRapidDimensionBuilder3.Origin.SetInferRelativeToGeometry(True)

    sketchRapidDimensionBuilder3.Origin.SetInferRelativeToGeometry(True)

    sketchRapidDimensionBuilder3.Measurement.Direction = NXOpen.Direction.Null

    sketchRapidDimensionBuilder3.Measurement.DirectionView = NXOpen.View.Null

    sketchRapidDimensionBuilder3.Style.DimensionStyle.NarrowDisplayType = NXOpen.Annotations.NarrowDisplayOption.NotSet

    dimensionlinearunits63 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits64 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits65 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits66 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits67 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits68 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits69 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits70 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits71 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    dimensionlinearunits72 = sketchRapidDimensionBuilder3.Style.UnitsStyle.DimensionLinearUnits

    expression8 = workPart.Expressions.FindObject("p1")
    expression8.SetFormula("40")

    theSession.SetUndoMarkVisibility(markId17, None, NXOpen.Session.MarkVisibility.Visible)

    markId18 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "快速尺寸")

    theSession.ActiveSketch.LocalUpdate()

    theSession.DeleteUndoMark(markId18, None)

    markId19 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "快速尺寸")

    theSession.SetUndoMarkName(markId17, "Edit Driving Value")

    expression8.SetFormula("55")

    theSession.SetUndoMarkVisibility(markId19, None, NXOpen.Session.MarkVisibility.Visible)

    markId20 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "快速尺寸")

    theSession.ActiveSketch.LocalUpdate()

    theSession.DeleteUndoMark(markId20, None)

    markId21 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "快速尺寸")

    theSession.SetUndoMarkName(markId19, "Edit Driving Value")

    sketchRapidDimensionBuilder3.Destroy()

    theSession.UndoToMark(markId21, None)

    theSession.DeleteUndoMark(markId21, None)

    sketchRapidDimensionBuilder3.Destroy()

    rotMatrix1 = NXOpen.Matrix3x3()

    rotMatrix1.Xx = 0.958604783049677
    rotMatrix1.Xy = 0.2847347342270119
    rotMatrix1.Xz = -0.0017323507019652866
    rotMatrix1.Yx = -0.0081866870897204964
    rotMatrix1.Yy = 0.033642222923388844
    rotMatrix1.Yz = 0.99940040974139488
    rotMatrix1.Zx = 0.28462229018257978
    rotMatrix1.Zy = -0.95801583074678165
    rotMatrix1.Zz = 0.034580629979475308
    translation1 = NXOpen.Point3d(1.0382561608464513, 0.20495988691827272, -7.1056962709911033)
    workPart.ModelingViews.WorkView.SetRotationTranslationScale(rotMatrix1, translation1, 0.89692984317447444)

    # ----------------------------------------------
    #   功能表：插入(S)->設計特徵(E)->拉伸(X)...
    # ----------------------------------------------
    markId22 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "起點")

    extrudeBuilder1 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)

    section1 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)

    extrudeBuilder1.Section = section1

    extrudeBuilder1.AllowSelfIntersectingSection(True)

    unit2 = extrudeBuilder1.Draft.FrontDraftAngle.Units

    expression9 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)

    extrudeBuilder1.DistanceTolerance = 0.01

    extrudeBuilder1.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create

    targetBodies1 = [NXOpen.Body.Null] * 1 
    targetBodies1[0] = NXOpen.Body.Null
    extrudeBuilder1.BooleanOperation.SetTargetBodies(targetBodies1)

    extrudeBuilder1.Limits.StartExtend.Value.SetFormula("0")

    extrudeBuilder1.Limits.EndExtend.Value.SetFormula("15")

    extrudeBuilder1.Draft.FrontDraftAngle.SetFormula("2")

    extrudeBuilder1.Draft.BackDraftAngle.SetFormula("2")

    extrudeBuilder1.Offset.StartOffset.SetFormula("0")

    extrudeBuilder1.Offset.EndOffset.SetFormula("5")

    smartVolumeProfileBuilder1 = extrudeBuilder1.SmartVolumeProfile

    smartVolumeProfileBuilder1.OpenProfileSmartVolumeOption = False

    smartVolumeProfileBuilder1.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci

    theSession.SetUndoMarkName(markId22, "拉伸 對話方塊")

    section1.DistanceTolerance = 0.01

    section1.ChainingTolerance = 0.0094999999999999998

    section1.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)

    markId23 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)

    curves1 = [NXOpen.ICurve.Null] * 2 
    curves1[0] = arc1
    curves1[1] = arc2
    seedPoint1 = NXOpen.Point3d(-16.250000000000323, 0.0, 7.9385662013573608)
    regionBoundaryRule1 = workPart.ScRuleFactory.CreateRuleRegionBoundary(theSession.ActiveSketch, curves1, seedPoint1, 0.01)

    section1.AllowSelfIntersection(True)

    rules1 = [None] * 1 
    rules1[0] = regionBoundaryRule1
    helpPoint1 = NXOpen.Point3d(0.0, 0.0, 0.0)
    section1.AddToSection(rules1, NXOpen.NXObject.Null, NXOpen.NXObject.Null, NXOpen.NXObject.Null, helpPoint1, NXOpen.Section.Mode.Create, False)

    theSession.DeleteUndoMark(markId23, None)

    markId24 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "section mark")

    markId25 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, None)

    theSession.DeleteUndoMark(markId25, None)

    direction2 = workPart.Directions.CreateDirection(theSession.ActiveSketch, NXOpen.Sense.Forward, NXOpen.SmartObject.UpdateOption.WithinModeling)

    extrudeBuilder1.Direction = direction2

    expression10 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)

    expression11 = workPart.Expressions.CreateSystemExpressionWithUnits("0", unit1)

    theSession.DeleteUndoMark(markId24, None)

    rotMatrix2 = NXOpen.Matrix3x3()

    rotMatrix2.Xx = 0.87653900295204401
    rotMatrix2.Xy = 0.27525316495221352
    rotMatrix2.Xz = 0.39486082546591916
    rotMatrix2.Yx = 0.16520779737589095
    rotMatrix2.Yy = -0.94256343722423475
    rotMatrix2.Yz = 0.29031112705895795
    rotMatrix2.Zx = 0.45209043342017802
    rotMatrix2.Zy = -0.18923493861289251
    rotMatrix2.Zz = -0.87166758458607974
    translation2 = NXOpen.Point3d(3.4386510877773482, -12.205940266165182, -6.4831025792050436)
    workPart.ModelingViews.WorkView.SetRotationTranslationScale(rotMatrix2, translation2, 0.89692984317447444)

    extrudeBuilder1.Limits.EndExtend.Value.SetFormula("18")

    extrudeBuilder1.Limits.EndExtend.Value.SetFormula("15")

    markId26 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "拉伸")

    extrudeBuilder1.ParentFeatureInternal = False

    markId27 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Invisible, "Deactivate Sketch")

    feature2 = extrudeBuilder1.CommitFeature()

    theSession.DeleteUndoMark(markId26, None)

    theSession.SetUndoMarkName(markId22, "拉伸")

    expression12 = extrudeBuilder1.Limits.StartExtend.Value
    expression13 = extrudeBuilder1.Limits.EndExtend.Value
    extrudeBuilder1.Destroy()

    workPart.Expressions.Delete(expression9)

    workPart.Expressions.Delete(expression10)

    workPart.Expressions.Delete(expression11)

    markId28 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Start")

    extrudeBuilder2 = workPart.Features.CreateExtrudeBuilder(NXOpen.Features.Feature.Null)

    section2 = workPart.Sections.CreateSection(0.0094999999999999998, 0.01, 0.5)

    extrudeBuilder2.Section = section2

    extrudeBuilder2.AllowSelfIntersectingSection(True)

    expression14 = workPart.Expressions.CreateSystemExpressionWithUnits("2.00", unit2)

    extrudeBuilder2.DistanceTolerance = 0.01

    extrudeBuilder2.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create

    targetBodies2 = [NXOpen.Body.Null] * 1 
    targetBodies2[0] = NXOpen.Body.Null
    extrudeBuilder2.BooleanOperation.SetTargetBodies(targetBodies2)

    extrudeBuilder2.Limits.StartExtend.Value.SetFormula("0")

    extrudeBuilder2.Limits.EndExtend.Value.SetFormula("15")

    extrudeBuilder2.BooleanOperation.Type = NXOpen.GeometricUtilities.BooleanOperation.BooleanType.Create

    targetBodies3 = [NXOpen.Body.Null] * 1 
    targetBodies3[0] = NXOpen.Body.Null
    extrudeBuilder2.BooleanOperation.SetTargetBodies(targetBodies3)

    extrudeBuilder2.Draft.FrontDraftAngle.SetFormula("2")

    extrudeBuilder2.Draft.BackDraftAngle.SetFormula("2")

    extrudeBuilder2.Offset.StartOffset.SetFormula("0")

    extrudeBuilder2.Offset.EndOffset.SetFormula("5")

    smartVolumeProfileBuilder2 = extrudeBuilder2.SmartVolumeProfile

    smartVolumeProfileBuilder2.OpenProfileSmartVolumeOption = False

    smartVolumeProfileBuilder2.CloseProfileRule = NXOpen.GeometricUtilities.SmartVolumeProfileBuilder.CloseProfileRuleType.Fci

    theSession.SetUndoMarkName(markId28, "拉伸 對話方塊")

    section2.DistanceTolerance = 0.01

    section2.ChainingTolerance = 0.0094999999999999998

    # ----------------------------------------------
    #   對話開始 拉伸
    # ----------------------------------------------
    section2.SetAllowedEntityTypes(NXOpen.Section.AllowTypes.OnlyCurves)

    rotMatrix3 = NXOpen.Matrix3x3()

    rotMatrix3.Xx = 0.72470100954239869
    rotMatrix3.Xy = 0.62660594751341081
    rotMatrix3.Xz = -0.28665908900478293
    rotMatrix3.Yx = 0.59275863470658663
    rotMatrix3.Yy = -0.35478658585258732
    rotMatrix3.Yz = 0.72302398264501078
    rotMatrix3.Zx = 0.3513483282285767
    rotMatrix3.Zy = -0.69389586037091322
    rotMatrix3.Zz = -0.62854028288654684
    translation3 = NXOpen.Point3d(6.0737969569863308, -7.7976138808778215, -10.26805949239019)
    workPart.ModelingViews.WorkView.SetRotationTranslationScale(rotMatrix3, translation3, 0.89692984317447444)

    extrudeBuilder2.Destroy()

    section2.Destroy()

    workPart.Expressions.Delete(expression14)

    theSession.UndoToMark(markId28, None)

    theSession.DeleteUndoMark(markId28, None)

    # ----------------------------------------------
    #   功能表：工具(T)->動作記錄(J)->停止錄製(S)
    # ----------------------------------------------

if __name__ == '__main__':
    main()